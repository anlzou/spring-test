<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--
            通过abstract属性指定CbcDao是个接口，spring容器不用帮助我们创建对象
            parent属性：指定接口类
    -->
    <bean id="cbcDao" class="com.anlzou.dao.CbcDao" abstract="true"></bean>
    <bean id="cbcDaoImpl" class="com.anlzou.dao.impl.CbcDaoImpl" parent="cbcDao"></bean>

    <!--将Security、Clean、Logger切面的对象创建交给spring容器-->
    <bean id="security" class="com.anlzou.security.Security"></bean>
    <bean id="cache" class="com.anlzou.cache.Clean"></bean>
    <bean id="log" class="com.anlzou.logs.Logger"></bean>
    <bean id="login" class="com.anlzou.login.Login"></bean>
    <bean id="eh" class="com.anlzou.exts.ExceptionHandler"></bean>

    <!--配置aop-->
    <aop:config>
        <!--配置切入点
            expression标签：用法在Spring手册的“#6.2.3. 声明一个切入点（pointcut）”
            解释：impl包下的CbcDaoImpl类的所有方法都是切入点
        -->
        <aop:pointcut id="qieDian" expression="execution (* com.anlzou.dao.impl.CbcDaoImpl.*(..))"></aop:pointcut>

        <!--配置切面与前置通知
            order标签：
                在前置通知中，值越小越先执行
                在后置通知中，值越大越先执行
            以下为积木格式，模块化开发，互补影响，体现了低耦合
        -->
        <aop:aspect ref="login" order="1">
            <aop:around method="login" pointcut-ref="qieDian"></aop:around>
        </aop:aspect>
        <aop:aspect ref="security" order="2">
            <aop:before method="isSecurity" pointcut-ref="qieDian"></aop:before>
        </aop:aspect>

        <!--后置-->
        <aop:aspect ref="log" order="4">
            <aop:after method="log" pointcut-ref="qieDian"></aop:after>
        </aop:aspect>
        <!--带返回值的后置通知-->
        <aop:aspect ref="log" order="3">
            <aop:after-returning method="logTest" pointcut-ref="qieDian" returning="temp"></aop:after-returning>
        </aop:aspect>
        <aop:aspect ref="cache" order="2">
            <aop:after method="cleanResource" pointcut-ref="qieDian"></aop:after>
        </aop:aspect>
        <!--配置异常通知-->
        <aop:aspect ref="eh" order="1">
            <aop:after-throwing method="handException" pointcut-ref="qieDian" throwing="ex"></aop:after-throwing>
        </aop:aspect>
    </aop:config>
</beans>